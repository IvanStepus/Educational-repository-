class WinDoor:
  def __init__(self, x, y, name="unk"):
    self.x = x
    self.y = y
    self.name = name
    self.square = x * y

  def __repr__(self):
    return f'{self.name} {self.x}x{self.y}'

class Room:
  def __init__(self, width, length, height):
    self.width = width
    self.length = length
    self.height = height
    self.wd = []

  def addWD(self, w, h, name='unk'):
    self.wd.append(WinDoor(w, h, name))

  def calc_wallpaper_area(self):
    new_square = 2 * (self.height * self.length + self.height * self.width)
    for i in self.wd:
      new_square -= i.square
    return new_square

  def calc_wallpaper_rolls(self, roll_length, roll_width):
    area = self.calc_wallpaper_area()
    return area / (roll_length * roll_width)


width = float(input('–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –∫–æ–º–Ω–∞—Ç—ã, –º: '))
length = float(input('–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –∫–æ–º–Ω–∞—Ç—ã, –º: '))
height = float(input('–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –∫–æ–º–Ω–∞—Ç—ã, –º: '))

room = Room(width, length, height)

while True:
  answer = input('–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–≤–µ—Ä—å –∏–ª–∏ –æ–∫–Ω–æ (y/n)? ')
  if answer == 'y':
    type_wd = input('–≠—Ç–æ –¥–≤–µ—Ä—å –∏–ª–∏ –æ–∫–Ω–æ (d/w)? ')
    if type_wd == 'd':
      name = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ üö™: ')
    else:
      name = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ ü™ü: ')
    width_wd = float(input(f'–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É {name}, –º: '))
    height_wd = float(input(f'–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É {name}, –º: '))
    room.addWD(width_wd, height_wd, name)
  else:
    break

roll_length = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É —Ä—É–ª–æ–Ω–∞ –æ–±–æ–µ–≤, –º: "))
roll_width = float(input("–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É —Ä—É–ª–æ–Ω–∞ –æ–±–æ–µ–≤, –º: "))

area = room.calc_wallpaper_area()
rolls = room.calc_wallpaper_rolls(roll_length, roll_width)

print(f'–ü–ª–æ—â–∞–¥—å –æ–∫–ª–µ–∏–≤–∞–µ–º–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: {area} –º^2')
print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä—É–ª–æ–Ω–æ–≤: {rolls} —à—Ç.")